1) Какие типы данных вы использовали в python ?
int, float, complex – числа
string - Строки
list – списки [1,2,3,4,5]
Tuple - Кортежи так же как и список, кортеж (tuple) является упорядоченной последовательностью элементов.
Множества - Множество является неупорядоченной уникализированной последовательностью. Объявляется множество с помощью элементов, разделённых запятой, внутри фигурных скобок {1,2,3,4,5}
Словари — неупорядоченные наборы пар ключ-значение.[1:2, 2:'sample', key: value]

2) Какие изменяемые и неизменяемые типы данных вы знаете?

изменяемые: списки (list), множества (set), словари (dict). 
неизменяемыe: числовые данные (int, float, complex), строки, кортежи (tuple).

Вновь определяемые пользователем типы (классы) могут быть определены как неизменяемые или изменяемые. Изменяемость объектов определённого типа является принципиально важной характеристикой, определяющей, может ли объект такого типа выступать в качестве ключа для словарей (dict) или нет.

3) Чем отличается кортеж от списка?
Кортежи так же как и список, кортеж (tuple) является упорядоченной последовательностью элементов.
Вся разница заключается в том, что кортежи неизменяемы.

4) Чем отличается set от dictionary?
dict создает пустой словарь
set создает набор

5) Перечислите методы списков:
list.append(x)		Добавляет элемент в конец списка
list.extend(L)		Расширяет список list, добавляя в конец все элементы списка L
list.insert(i, x)	Вставляет на i-ый элемент значение x
list.remove(x)		Удаляет первый элемент в списке, имеющий значение x. ValueError, если такого элемента не существует
list.pop([i])		Удаляет i-ый элемент и возвращает его. Если индекс не указан, удаляется последний элемент
list.count(x)		Возвращает количество элементов со значением x
list.reverse()		Разворачивает список
list.copy()			Поверхностная копия списка
list.clear()		Очищает список
list.sort([key=функция])		Сортирует список на основе функции
list.index(x, [start [, end]])	Возвращает положение первого элемента со значением x (при этом поиск ведется от start до end)

6) Перечислите методы dictionary
dict.clear() - 		очищает словарь.
dict.copy() - 		возвращает копию словаря.
dict.items() - 		возвращает пары (ключ, значение).
dict.keys() - 		возвращает ключи в словаре.
dict.popitem() - 	удаляет и возвращает пару (ключ, значение). Если словарь пуст, бросает исключение KeyError. Помните, что словари неупорядочены.
dict.values() - 	возвращает значения в словаре.
dict.setdefault(key[, default]) - возвращает значение ключа, но если его нет, не бросает исключение, а создает ключ с значением default (по умолчанию None).
dict.update([other]) - обновляет словарь, добавляя пары (ключ, значение) из other. Существующие ключи перезаписываются. Возвращает None (не новый словарь!).
dict.pop(key[, default]) - удаляет ключ и возвращает значение. Если ключа нет, возвращает default (по умолчанию бросает исключение).
classmethod dict.fromkeys(seq[, value]) - создает словарь с ключами из seq и значением value (по умолчанию None).
dict.get(key[, default]) - возвращает значение ключа, но если его нет, не бросает исключение, а возвращает default (по умолчанию None).

7) Чем отличается set(множества) от frozenset?
Единственное отличие set от frozenset заключается в том, что set - изменяемый тип данных, а frozenset - нет. Примерно похожая ситуация с списками и кортежами.

8) Какие виды циклов вы знаете?
- While - один из самых универсальных циклов в Python, поэтому довольно медленный. Выполняет тело цикла до тех пор, пока условие цикла истинно.
- Цикл for уже чуточку сложнее, чуть менее универсальный, но выполняется гораздо быстрее цикла while. Этот цикл проходится по любому итерируемому объекту (например строке или списку), и во время каждого прохода выполняет тело цикла.
- Оператор continue начинает следующий проход цикла, минуя оставшееся тело цикла (for или while)
- Оператор break досрочно прерывает цикл.


9) Расскажите про условный оператор
Условная инструкция if-elif-else основной инструмент выбора в Python. Она выбирает, какое действие следует выполнить, в зависимости от значения переменных в момент проверки условия.
Сначала записывается часть if с условным выражением, далее могут следовать одна или более необязательных частей elif, и, наконец, необязательная часть else.
if test1:
    state1
elif test2:
    state2
else:
    state3

 A = Y if X else Z

10) Расскажите про генератор списков
Генератор списков - способ построить новый список, применяя выражение к каждому элементу последовательности. Генераторы списков очень похожи на цикл for.
c = [c * 3 for c in 'list']